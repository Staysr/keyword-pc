{"remainingRequest":"/Users/admin/Desktop/关键词pc/node_modules/_babel-loader@8.2.3@babel-loader/lib/index.js!/Users/admin/Desktop/关键词pc/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--1-0!/Users/admin/Desktop/关键词pc/node_modules/_vue-loader@15.9.8@vue-loader/lib/index.js??vue-loader-options!/Users/admin/Desktop/关键词pc/src/views/info.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/admin/Desktop/关键词pc/src/views/info.vue","mtime":1637825171438},{"path":"/Users/admin/Desktop/关键词pc/babel.config.js","mtime":1631839896000},{"path":"/Users/admin/Desktop/关键词pc/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/admin/Desktop/关键词pc/node_modules/_babel-loader@8.2.3@babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/admin/Desktop/关键词pc/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/admin/Desktop/关键词pc/node_modules/_vue-loader@15.9.8@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["info.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div>\r\n    <div style=\"width: 100%; margin-left: 20px;margin-top: 40px; display: block; position: relative;top: 30px;\">\r\n      <span style=\"font-size: 20px;\">{{ data.keyword }}</span>\r\n    </div>\r\n    <div style=\"position: relative;left: 1150px; top: 50px;\">\r\n      <el-popconfirm @confirm=\"okdelete\" confirm-button-text='好的' cancel-button-text='不用了' icon=\"el-icon-info\"\r\n        icon-color=\"red\" title=\"确定删除吗？\">\r\n        <el-button slot=\"reference\">删除</el-button>\r\n      </el-popconfirm>\r\n      <el-button style=\"margin-left: 12px;\" @click=\"cancel\" type=\"primary\">取消</el-button>\r\n    </div>\r\n    <div style=\"position: relative;left: 1080px; top: 60px;\">\r\n      <el-tag v-if=\"numlist != 0\">当前图片选中:{{ numlist }}</el-tag>\r\n      <el-tag style=\"margin-left: 12px;\" type=\"warning\" v-if=\"videonumlist != 0\">当前视频选中:{{ videonumlist }}</el-tag>\r\n    </div>\r\n    <!-- <div style=\"float: right;\">\r\n      <img  style=\"width: 100px; height: 100px;position: relative; top:-40px;right: 20px;\" />\r\n    </div> -->\r\n    <div style=\"margin-top: 50px; margin-left: 20px; width: 100%;\">\r\n      <el-tabs v-model=\"activeName\" @tab-click=\"handleClick\">\r\n        <el-tab-pane label=\"图片\" name=\"img\">\r\n          <div style=\"display: block; float: left; margin-right: 12px;\">\r\n            <div\r\n              style=\"width: 100px;height: 100px; background-color: #C0C4CC; text-align: center;vertical-align: middle;line-height: 120px;\">\r\n              <el-upload ref=\"cropperUpload\" :data=\"uploadData\" :limit=\"addsize\" :action=\"img_url\"\r\n                :on-progress=\"filedata\" :on-success=\"bg_img1\" accept=\"image/png,image/jpeg,image/jpg\"\r\n                list-type=\"picture-card\" :auto-upload=\"true\">\r\n                <i slot=\"default\" class=\"el-icon-plus\"></i>\r\n                <div slot=\"file\" slot-scope=\"{file}\">\r\n                  <img class=\"el-upload-list__item-thumbnail\" :src=\"file.url\" alt=\"\">\r\n                  <span class=\"el-upload-list__item-actions\">\r\n                  </span>\r\n                </div>\r\n              </el-upload>\r\n            </div>\r\n          </div>\r\n          <div style=\"float: left; margin-left: 10px; margin-bottom: 12px;\" v-for=\"(item,index) in newdata.img\"\r\n            :key=\"index\">\r\n            <el-row :gutter=\"20\">\r\n              <el-col :span=\"2\">\r\n                <div style=\"width: 110px;height: 110px;\">\r\n                  <div style=\"position: relative;left: 100px;top:12px\">\r\n                    <el-checkbox-group v-model=\"checkAll\" @change=\"handleCheckChange\">\r\n                      <el-checkbox :label=\"item\">&nbsp;</el-checkbox>\r\n                    </el-checkbox-group>\r\n                  </div>\r\n                  <div>\r\n                    <el-image style=\"width: 100px;height: 100px;margin-left: 12px;\" :src=\"item.media_cover_img\"\r\n                      :preview-src-list=\"srcList\"></el-image>\r\n                  </div>\r\n                </div>\r\n              </el-col>\r\n            </el-row>\r\n          </div>\r\n          <!-- <el-button @click=\"keyWorddetail\" type=\"primary\">刷新</el-button> -->\r\n        </el-tab-pane>\r\n        <el-tab-pane label=\"视频\" name=\"video\">\r\n          <div style=\"display: block; float: left; margin-right: 12px;\">\r\n            <div\r\n              style=\"width: 100px;height: 100px; background-color: #C0C4CC; text-align: center;vertical-align: middle;line-height: 120px;\">\r\n              <el-upload ref=\"cropperUploadvideo\" :data=\"uploadDatavideo\" multiple :action=\"video_url\"\r\n                :on-progress=\"videofiledataf\" :on-success=\"videosuss\" accept=\".mp4\" list-type=\"picture-card\"\r\n                :auto-upload=\"true\">\r\n                <i slot=\"default\" class=\"el-icon-plus\"></i>\r\n                <div slot=\"file\" slot-scope=\"{file}\">\r\n                  <img class=\"el-upload-list__item-thumbnail\" :src=\"file.url\" alt=\"\">\r\n                  <span class=\"el-upload-list__item-actions\">\r\n                  </span>\r\n                </div>\r\n              </el-upload>\r\n            </div>\r\n          </div>\r\n          <div style=\"float: left; margin-left: 10px; margin-bottom: 12px;\" v-for=\"(item,index) in newdata.vod\"\r\n            :key=\"index\">\r\n            <el-row :gutter=\"20\">\r\n              <el-col :span=\"2\">\r\n                <div style=\"width: 110px;height: 110px; background-color: #C0C4CC;\">\r\n                  <div style=\"position: relative;left: 80px;\">\r\n                    <el-checkbox-group v-model=\"checkAllvideo\" @change=\"handleCheckChangevideo\">\r\n                      <el-checkbox :label=\"item\">&nbsp;</el-checkbox>\r\n                    </el-checkbox-group>\r\n                  </div>\r\n                  <div>\r\n                    <img @click=\"openvideo(item.media_url)\" style=\"width: 90px;height: 90px;margin-left: 12px;\"\r\n                      :src=\"item.media_cover_img\" />\r\n                  </div>\r\n                </div>\r\n              </el-col>\r\n            </el-row>\r\n          </div>\r\n          <!-- <el-button @click=\"keyWorddetail\" type=\"primary\">刷新</el-button> -->\r\n        </el-tab-pane>\r\n        <el-tab-pane label=\"文字描述\" name=\"text\">\r\n          <div style=\"width: 900px;height: 900px;\">\r\n            <el-row :gutter=\"20\">\r\n              <el-col :span=\"20\">\r\n                <el-input autosize type=\"textarea\" placeholder=\"请输入内容\" v-model=\"textarea\" show-word-limit>\r\n                </el-input>\r\n              </el-col>\r\n              <el-col :span=\"2\">\r\n                <el-button @click=\"addText\" type=\"primary\">保存</el-button>\r\n              </el-col>\r\n            </el-row>\r\n            <!-- <el-row :gutter=\"20\" v-for=\"(item,index) in newdata.text\" style=\"margin-top: 12px;\">\r\n              <el-col :span=\"20\">\r\n                <el-input disabled autosize type=\"textarea\" placeholder=\"请输入内容\" v-model=\"item.media_text\" show-word-limit>\r\n                 </el-input>\r\n              </el-col>\r\n              <el-col :span=\"2\">\r\n                <el-popconfirm @confirm=\"deletetextok(item)\" confirm-button-text='好的' cancel-button-text='不用了' icon=\"el-icon-info\"\r\n                  icon-color=\"red\" title=\"确定删除吗？\">\r\n                  <el-button slot=\"reference\">删除</el-button>\r\n                </el-popconfirm>\r\n              </el-col>\r\n            </el-row> -->\r\n          </div>\r\n        </el-tab-pane>\r\n      </el-tabs>\r\n\r\n      <el-dialog title=\"视频\" :visible.sync=\"dialogVisible\" width=\"30%\">\r\n        <video controls style=\"width:100%; height:100%; object-fit: fill\" :src=\"videoopenurl\"></video>\r\n        <span slot=\"footer\" class=\"dialog-footer\">\r\n          <el-button type=\"primary\" @click=\"dialogVisible = false\">确 定</el-button>\r\n        </span>\r\n      </el-dialog>\r\n\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  export default {\r\n    data() {\r\n      return {\r\n        timeout: '',\r\n        checkAll: [],\r\n        checkAllvideo: [],\r\n        numlist: 0,\r\n        videonumlist: 0,\r\n        partSize: '',\r\n        parallel: '',\r\n        retryCount: '',\r\n        retryDuration: '',\r\n        textid: '',\r\n        uploader: null,\r\n        videofiledata: '',\r\n        istextb: false,\r\n        addsize: 1,\r\n        region: 'cn-shanghai',\r\n        userId: '1303984639806000',\r\n        activeName: 'img',\r\n        ImageURL: '',\r\n        checkListimg: ['选中且禁用', '复选框 A'],\r\n        data: '',\r\n        name: '',\r\n        cancelname: 'img',\r\n        newdata: '',\r\n        textarea: '',\r\n        uploadAuth: '',\r\n        uploadAddress: '',\r\n        isvideo_img: 1, //type 1 默认 img 2 视频 video\r\n        videoId: '',\r\n        srcList: [],\r\n        videoopenurl: '',\r\n        dialogImageUrl: '',\r\n        dialogVisible: false,\r\n        imghandleCheckChange: [],\r\n        videohandleCheckChange: [],\r\n        img_url: localStorage.getItem('baseUrl') + '/cms/media/createUploadImage?token=' + localStorage.getItem(\r\n          'token'),\r\n        video_url: localStorage.getItem('baseUrl') + '/cms/media/createUploadVideo?token=' + localStorage.getItem(\r\n          'token'),\r\n        uploadData: {\r\n          \"title\": \"素材库\",\r\n          \"description\": \"素材库\",\r\n          \"cateId\": \"5099\",\r\n          \"tags\": \"dspseo\",\r\n          \"fileName\": '/Users/admin/Desktop/image/IMG_7536.jpg'\r\n        },\r\n        uploadDatavideo: {\r\n          \"title\": \"素材库\",\r\n          \"description\": \"素材库\",\r\n          \"cateId\": \"5100\",\r\n          \"tags\": \"dspseo\",\r\n          \"fileName\": '/Users/admin/Downloads/652ebb55fb1f2760313d10f1651a6b.MP4'\r\n        },\r\n      };\r\n    },\r\n    mounted() {\r\n      this.data = JSON.parse(this.$route.query.item);\r\n      this.name = this.$route.query.type\r\n      this.keyWorddetail()\r\n      if (this.name == -1) {\r\n        this.activeName = 'img'\r\n      } else {\r\n        this.name == 0 ? this.activeName = 'img' : (this.name == 1 ? this.activeName = 'video' : this.activeName =\r\n          'text')\r\n      }\r\n    },\r\n    methods: {\r\n      //获取素材库详情\r\n      async keyWorddetail() {\r\n        let res = await this.$api.getkeyWorddetail({\r\n          id: this.data.id,\r\n          token: localStorage.getItem('token')\r\n        });\r\n        if (res.code == 200) {\r\n          this.newdata = res.data\r\n          // for (var i = 0; i < res.data.text.length; i++) {\r\n          //   this.textarea += res.data.text[i].media_text\r\n          // }\r\n          for (var i = 0; i < res.data.img.length; i++) {\r\n            this.srcList.push(res.data.img[i].media_url)\r\n          }\r\n          this.textarea = res.data.text[0].media_text\r\n          this.textid = res.data.text.length == 0 ? this.textid == '' : res.data.text[0]\r\n            .id\r\n        } else {\r\n          this.error(res.msg)\r\n        }\r\n      },\r\n      //视频上传\r\n      async videosuss(file) {\r\n        console.log(file);\r\n        //获取上传凭证\r\n        if (file.code == 200) {\r\n          this.isvideo_img = 2;\r\n          this.uploadAuth = file.data.UploadAuth\r\n          this.uploadAddress = file.data.UploadAddress\r\n          this.videoId = file.data.VideoId\r\n          var userData = '{\"Vod\":{}}'\r\n          this.uploader = this.createUploader()\r\n          this.uploader.addFile(this.videofiledata, null, null, null, userData)\r\n          this.uploader.startUpload()\r\n        } else {\r\n          this.error(file.msg)\r\n        }\r\n      },\r\n      //文字保存\r\n      async addText() {\r\n        this.istextb = true;\r\n        let res = await this.$api.pushaddText({\r\n          id: this.textid,\r\n          keyword_id: this.data.id,\r\n          keyword: this.data.keyword,\r\n          media_text: this.textarea,\r\n          token: localStorage.getItem('token')\r\n        });\r\n        if (res.code == 200) {\r\n          this.istextb = false;\r\n          this.$message({\r\n            message: '保存成功',\r\n            type: 'success'\r\n          });\r\n          this.textarea = \"\"\r\n          this.keyWorddetail()\r\n        } else {\r\n          this.error(res.msg)\r\n        }\r\n      },\r\n      //播放视频\r\n      openvideo(url) {\r\n        this.videoopenurl = url;\r\n        this.dialogVisible = true;\r\n      },\r\n      //相册图片上传\r\n      async bg_img1(file) {\r\n        //获取上传凭证\r\n        if (file.code == 200) {\r\n          this.isvideo_img = 1;\r\n          this.uploadAuth = file.data.UploadAuth\r\n          this.uploadAddress = file.data.UploadAddress\r\n          this.videoId = file.data.ImageId\r\n          this.ImageURL = file.data.ImageURL //上传地址\r\n          var userData = '{\"Vod\":{}}'\r\n          this.uploader = this.createUploader()\r\n          this.uploader.addFile(this.file, null, null, null, userData)\r\n          this.uploader.startUpload()\r\n        } else {\r\n          this.error(file.msg)\r\n        }\r\n      },\r\n      //文件上传\r\n      createUploader(type) {\r\n        let self = this\r\n        let uploader = new AliyunUpload.Vod({\r\n          timeout: self.timeout || 60000,\r\n          partSize: self.partSize || 1048576,\r\n          parallel: self.parallel || 5,\r\n          retryCount: self.retryCount || 3,\r\n          retryDuration: self.retryDuration || 2,\r\n          region: self.region,\r\n          userId: self.userId,\r\n          // 开始上传\r\n          onUploadstarted: function(uploadInfo) {\r\n            uploader.setUploadAuthAndAddress(uploadInfo, self.uploadAuth, self.uploadAddress, self.videoId)\r\n          },\r\n          // 文件上传成功\r\n          onUploadSucceed: function(uploadInfo) {\r\n            self.addImg();\r\n          },\r\n          onUploadProgress: function(uploadInfo, totalSize, progress) {\r\n            self.$message({\r\n              message: '文件上传中' + uploadInfo.file.name + \", fileSize:\" + totalSize + \", percent:\" + Math.ceil(\r\n                progress * 100) + \"%\",\r\n            });\r\n          },\r\n          // 文件上传失败\r\n          onUploadFailed: function(uploadInfo, code, message) {\r\n            self.uploadAuth = ''\r\n            self.uploadAddress = ''\r\n            self.videoId = ''\r\n            self.ImageURL = '' //上传地址\r\n            self.error(\"文件上传失败: \" + uploadInfo.file.name + \", code: \" + code + \", message:\" + message)\r\n          },\r\n          // 取消文件上传\r\n          onUploadCanceled: function(uploadInfo, code, message) {\r\n            self.error(\"文件已暂停上传: \" + uploadInfo.file.name + \", code: \" + code + \", message:\" + message)\r\n          },\r\n        })\r\n        return uploader\r\n      },\r\n      async addImg() {\r\n        var data = '';\r\n        if (this.isvideo_img == 1) { // 1 == img  2== video\r\n          let res = await this.$api.addImg({\r\n            keyword_id: this.data.id,\r\n            keyword: this.data.keyword,\r\n            media_id: this.videoId,\r\n            media_name: this.data.keyword,\r\n            media_ext: 'png',\r\n            media_cate_id: '5099',\r\n            media_url: this.ImageURL,\r\n            token: localStorage.getItem('token')\r\n          });\r\n          data = res\r\n          this.$refs.cropperUpload.clearFiles()\r\n        } else {\r\n          let res = await this.$api.addvideo({\r\n            keyword_id: this.data.id,\r\n            keyword: this.data.keyword,\r\n            media_id: this.videoId,\r\n            media_name: this.data.keyword,\r\n            media_ext: 'mp4',\r\n            media_cate_id: '5100',\r\n            token: localStorage.getItem('token')\r\n          });\r\n          data = res\r\n          this.$refs.cropperUploadvideo.clearFiles()\r\n        }\r\n        if (data.code == 200) {\r\n          this.keyWorddetail()\r\n          self.uploadAuth = ''\r\n          self.uploadAddress = ''\r\n          self.videoId = ''\r\n          self.ImageURL = '' //上传地址\r\n          this.$message({\r\n            message: '上传成功',\r\n            type: 'success'\r\n          });\r\n        }\r\n      },\r\n      //删除列表\r\n      handleCheckChange(val) {\r\n        this.numlist = val.length\r\n        let arrdel = [];\r\n        for (var i = 0; i < val.length; i++) {\r\n          arrdel.push(val[i].id)\r\n        }\r\n        this.imghandleCheckChange = arrdel\r\n      },\r\n      //最终删除\r\n      async okdelete() {\r\n        let res = await this.$api.deletedata({\r\n          ids: this.cancelname == 'img' ? this.imghandleCheckChange : this.videohandleCheckChange,\r\n          keyword_id: this.data.id,\r\n          type: this.cancelname == 'img' ? 0 : 1,\r\n          token: localStorage.getItem('token')\r\n        });\r\n        if (this.cancelname == 'img') {\r\n          this.checkAll = [],\r\n            this.numlist = 0\r\n        } else {\r\n          this.checkAllvideo = [],\r\n            this.videonumlist = 0\r\n        }\r\n        if (res.code == 200) {\r\n          this.$message({\r\n            message: '删除成功',\r\n            type: 'success'\r\n          });\r\n          this.keyWorddetail();\r\n        } else {\r\n          this.error(res.msg)\r\n        }\r\n      },\r\n      // 删除视频\r\n      handleCheckChangevideo(val) {\r\n        this.videonumlist = val.length\r\n        let arrdel = [];\r\n        for (var i = 0; i < val.length; i++) {\r\n          arrdel.push(val[i].id)\r\n        }\r\n        this.videohandleCheckChange = arrdel\r\n      },\r\n      //删除文本\r\n      async deletetextok(id) {\r\n        console.log(id)\r\n        let res = await this.$api.deletedata({\r\n          ids: id.id,\r\n          keyword_id: this.data.id,\r\n          type: 2,\r\n          token: localStorage.getItem('token')\r\n        });\r\n        if (res.code == 200) {\r\n          this.$message({\r\n            message: '删除成功',\r\n            type: 'success'\r\n          });\r\n          this.keyWorddetail();\r\n        } else {\r\n          this.error(res.msg)\r\n        }\r\n      },\r\n      //获取文件对象\r\n      filedata(event, file, fileList) {\r\n        this.file = file.raw\r\n      },\r\n      //取消选中\r\n      cancel() {\r\n        if (this.cancelname == 'img') {\r\n          this.checkAll = [],\r\n            this.numlist = 0\r\n        } else {\r\n          this.checkAllvideo = [],\r\n            this.videonumlist = 0\r\n        }\r\n      },\r\n      handleClick(tab, event) {\r\n        this.cancelname = tab.name\r\n      },\r\n      videofiledataf(event, file, fileList) {\r\n        this.videofiledata = file.raw\r\n      },\r\n      error(msg) {\r\n        this.$notify.error({\r\n          title: '错误',\r\n          message: msg\r\n        });\r\n      }\r\n    },\r\n  };\r\n</script>\r\n<style>\r\n  .el-card__body {\r\n    padding: 0px;\r\n  }\r\n</style>\n"],"sourceRoot":"src/views"}]}